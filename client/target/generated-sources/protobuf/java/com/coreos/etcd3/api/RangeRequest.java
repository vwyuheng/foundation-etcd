// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package com.coreos.etcd3.api;

/**
 * Protobuf type {@code etcdserverpb.RangeRequest}
 */
public  final class RangeRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:etcdserverpb.RangeRequest)
    RangeRequestOrBuilder {
  // Use RangeRequest.newBuilder() to construct.
  private RangeRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RangeRequest() {
    key_ = com.google.protobuf.ByteString.EMPTY;
    rangeEnd_ = com.google.protobuf.ByteString.EMPTY;
    limit_ = 0L;
    revision_ = 0L;
    sortOrder_ = 0;
    sortTarget_ = 0;
    serializable_ = false;
    keysOnly_ = false;
    countOnly_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private RangeRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {

            key_ = input.readBytes();
            break;
          }
          case 18: {

            rangeEnd_ = input.readBytes();
            break;
          }
          case 24: {

            limit_ = input.readInt64();
            break;
          }
          case 32: {

            revision_ = input.readInt64();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            sortOrder_ = rawValue;
            break;
          }
          case 48: {
            int rawValue = input.readEnum();

            sortTarget_ = rawValue;
            break;
          }
          case 56: {

            serializable_ = input.readBool();
            break;
          }
          case 64: {

            keysOnly_ = input.readBool();
            break;
          }
          case 72: {

            countOnly_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.coreos.etcd3.api.Rpc.internal_static_etcdserverpb_RangeRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.coreos.etcd3.api.Rpc.internal_static_etcdserverpb_RangeRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.coreos.etcd3.api.RangeRequest.class, com.coreos.etcd3.api.RangeRequest.Builder.class);
  }

  /**
   * Protobuf enum {@code etcdserverpb.RangeRequest.SortOrder}
   */
  public enum SortOrder
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * default, no sorting
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * lowest target value first
     * </pre>
     *
     * <code>ASCEND = 1;</code>
     */
    ASCEND(1),
    /**
     * <pre>
     * highest target value first
     * </pre>
     *
     * <code>DESCEND = 2;</code>
     */
    DESCEND(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * default, no sorting
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * lowest target value first
     * </pre>
     *
     * <code>ASCEND = 1;</code>
     */
    public static final int ASCEND_VALUE = 1;
    /**
     * <pre>
     * highest target value first
     * </pre>
     *
     * <code>DESCEND = 2;</code>
     */
    public static final int DESCEND_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SortOrder valueOf(int value) {
      return forNumber(value);
    }

    public static SortOrder forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return ASCEND;
        case 2: return DESCEND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SortOrder>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SortOrder> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SortOrder>() {
            public SortOrder findValueByNumber(int number) {
              return SortOrder.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.coreos.etcd3.api.RangeRequest.getDescriptor().getEnumTypes().get(0);
    }

    private static final SortOrder[] VALUES = values();

    public static SortOrder valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SortOrder(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:etcdserverpb.RangeRequest.SortOrder)
  }

  /**
   * Protobuf enum {@code etcdserverpb.RangeRequest.SortTarget}
   */
  public enum SortTarget
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>KEY = 0;</code>
     */
    KEY(0),
    /**
     * <code>VERSION = 1;</code>
     */
    VERSION(1),
    /**
     * <code>CREATE = 2;</code>
     */
    CREATE(2),
    /**
     * <code>MOD = 3;</code>
     */
    MOD(3),
    /**
     * <code>VALUE = 4;</code>
     */
    VALUE(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>KEY = 0;</code>
     */
    public static final int KEY_VALUE = 0;
    /**
     * <code>VERSION = 1;</code>
     */
    public static final int VERSION_VALUE = 1;
    /**
     * <code>CREATE = 2;</code>
     */
    public static final int CREATE_VALUE = 2;
    /**
     * <code>MOD = 3;</code>
     */
    public static final int MOD_VALUE = 3;
    /**
     * <code>VALUE = 4;</code>
     */
    public static final int VALUE_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SortTarget valueOf(int value) {
      return forNumber(value);
    }

    public static SortTarget forNumber(int value) {
      switch (value) {
        case 0: return KEY;
        case 1: return VERSION;
        case 2: return CREATE;
        case 3: return MOD;
        case 4: return VALUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SortTarget>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SortTarget> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SortTarget>() {
            public SortTarget findValueByNumber(int number) {
              return SortTarget.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.coreos.etcd3.api.RangeRequest.getDescriptor().getEnumTypes().get(1);
    }

    private static final SortTarget[] VALUES = values();

    public static SortTarget valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SortTarget(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:etcdserverpb.RangeRequest.SortTarget)
  }

  public static final int KEY_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString key_;
  /**
   * <pre>
   * key is the first key for the range. If range_end is not given, the request only looks up key.
   * </pre>
   *
   * <code>optional bytes key = 1;</code>
   */
  public com.google.protobuf.ByteString getKey() {
    return key_;
  }

  public static final int RANGE_END_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString rangeEnd_;
  /**
   * <pre>
   * range_end is the upper bound on the requested range [key, range_end).
   * If range_end is '&#92;0', the range is all keys &gt;= key.
   * If the range_end is one bit larger than the given key,
   * then the range requests get the all keys with the prefix (the given key).
   * If both key and range_end are '&#92;0', then range requests returns all keys.
   * </pre>
   *
   * <code>optional bytes range_end = 2;</code>
   */
  public com.google.protobuf.ByteString getRangeEnd() {
    return rangeEnd_;
  }

  public static final int LIMIT_FIELD_NUMBER = 3;
  private long limit_;
  /**
   * <pre>
   * limit is a limit on the number of keys returned for the request.
   * </pre>
   *
   * <code>optional int64 limit = 3;</code>
   */
  public long getLimit() {
    return limit_;
  }

  public static final int REVISION_FIELD_NUMBER = 4;
  private long revision_;
  /**
   * <pre>
   * revision is the point-in-time of the key-value store to use for the range.
   * If revision is less or equal to zero, the range is over the newest key-value store.
   * If the revision has been compacted, ErrCompacted is returned as a response.
   * </pre>
   *
   * <code>optional int64 revision = 4;</code>
   */
  public long getRevision() {
    return revision_;
  }

  public static final int SORT_ORDER_FIELD_NUMBER = 5;
  private int sortOrder_;
  /**
   * <pre>
   * sort_order is the order for returned sorted results.
   * </pre>
   *
   * <code>optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;</code>
   */
  public int getSortOrderValue() {
    return sortOrder_;
  }
  /**
   * <pre>
   * sort_order is the order for returned sorted results.
   * </pre>
   *
   * <code>optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;</code>
   */
  public com.coreos.etcd3.api.RangeRequest.SortOrder getSortOrder() {
    com.coreos.etcd3.api.RangeRequest.SortOrder result = com.coreos.etcd3.api.RangeRequest.SortOrder.valueOf(sortOrder_);
    return result == null ? com.coreos.etcd3.api.RangeRequest.SortOrder.UNRECOGNIZED : result;
  }

  public static final int SORT_TARGET_FIELD_NUMBER = 6;
  private int sortTarget_;
  /**
   * <pre>
   * sort_target is the key-value field to use for sorting.
   * </pre>
   *
   * <code>optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;</code>
   */
  public int getSortTargetValue() {
    return sortTarget_;
  }
  /**
   * <pre>
   * sort_target is the key-value field to use for sorting.
   * </pre>
   *
   * <code>optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;</code>
   */
  public com.coreos.etcd3.api.RangeRequest.SortTarget getSortTarget() {
    com.coreos.etcd3.api.RangeRequest.SortTarget result = com.coreos.etcd3.api.RangeRequest.SortTarget.valueOf(sortTarget_);
    return result == null ? com.coreos.etcd3.api.RangeRequest.SortTarget.UNRECOGNIZED : result;
  }

  public static final int SERIALIZABLE_FIELD_NUMBER = 7;
  private boolean serializable_;
  /**
   * <pre>
   * serializable sets the range request to use serializable member-local reads.
   * Range requests are linearizable by default; linearizable requests have higher
   * latency and lower throughput than serializable requests but reflect the current
   * consensus of the cluster. For better performance, in exchange for possible stale reads,
   * a serializable range request is served locally without needing to reach consensus
   * with other nodes in the cluster.
   * </pre>
   *
   * <code>optional bool serializable = 7;</code>
   */
  public boolean getSerializable() {
    return serializable_;
  }

  public static final int KEYS_ONLY_FIELD_NUMBER = 8;
  private boolean keysOnly_;
  /**
   * <pre>
   * keys_only when set returns only the keys and not the values.
   * </pre>
   *
   * <code>optional bool keys_only = 8;</code>
   */
  public boolean getKeysOnly() {
    return keysOnly_;
  }

  public static final int COUNT_ONLY_FIELD_NUMBER = 9;
  private boolean countOnly_;
  /**
   * <pre>
   * count_only when set returns only the count of the keys in the range.
   * </pre>
   *
   * <code>optional bool count_only = 9;</code>
   */
  public boolean getCountOnly() {
    return countOnly_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!key_.isEmpty()) {
      output.writeBytes(1, key_);
    }
    if (!rangeEnd_.isEmpty()) {
      output.writeBytes(2, rangeEnd_);
    }
    if (limit_ != 0L) {
      output.writeInt64(3, limit_);
    }
    if (revision_ != 0L) {
      output.writeInt64(4, revision_);
    }
    if (sortOrder_ != com.coreos.etcd3.api.RangeRequest.SortOrder.NONE.getNumber()) {
      output.writeEnum(5, sortOrder_);
    }
    if (sortTarget_ != com.coreos.etcd3.api.RangeRequest.SortTarget.KEY.getNumber()) {
      output.writeEnum(6, sortTarget_);
    }
    if (serializable_ != false) {
      output.writeBool(7, serializable_);
    }
    if (keysOnly_ != false) {
      output.writeBool(8, keysOnly_);
    }
    if (countOnly_ != false) {
      output.writeBool(9, countOnly_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!key_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, key_);
    }
    if (!rangeEnd_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, rangeEnd_);
    }
    if (limit_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, limit_);
    }
    if (revision_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, revision_);
    }
    if (sortOrder_ != com.coreos.etcd3.api.RangeRequest.SortOrder.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, sortOrder_);
    }
    if (sortTarget_ != com.coreos.etcd3.api.RangeRequest.SortTarget.KEY.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, sortTarget_);
    }
    if (serializable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, serializable_);
    }
    if (keysOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, keysOnly_);
    }
    if (countOnly_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, countOnly_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.coreos.etcd3.api.RangeRequest)) {
      return super.equals(obj);
    }
    com.coreos.etcd3.api.RangeRequest other = (com.coreos.etcd3.api.RangeRequest) obj;

    boolean result = true;
    result = result && getKey()
        .equals(other.getKey());
    result = result && getRangeEnd()
        .equals(other.getRangeEnd());
    result = result && (getLimit()
        == other.getLimit());
    result = result && (getRevision()
        == other.getRevision());
    result = result && sortOrder_ == other.sortOrder_;
    result = result && sortTarget_ == other.sortTarget_;
    result = result && (getSerializable()
        == other.getSerializable());
    result = result && (getKeysOnly()
        == other.getKeysOnly());
    result = result && (getCountOnly()
        == other.getCountOnly());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + KEY_FIELD_NUMBER;
    hash = (53 * hash) + getKey().hashCode();
    hash = (37 * hash) + RANGE_END_FIELD_NUMBER;
    hash = (53 * hash) + getRangeEnd().hashCode();
    hash = (37 * hash) + LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getLimit());
    hash = (37 * hash) + REVISION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRevision());
    hash = (37 * hash) + SORT_ORDER_FIELD_NUMBER;
    hash = (53 * hash) + sortOrder_;
    hash = (37 * hash) + SORT_TARGET_FIELD_NUMBER;
    hash = (53 * hash) + sortTarget_;
    hash = (37 * hash) + SERIALIZABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSerializable());
    hash = (37 * hash) + KEYS_ONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getKeysOnly());
    hash = (37 * hash) + COUNT_ONLY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getCountOnly());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.coreos.etcd3.api.RangeRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.coreos.etcd3.api.RangeRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.coreos.etcd3.api.RangeRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.coreos.etcd3.api.RangeRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.coreos.etcd3.api.RangeRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.coreos.etcd3.api.RangeRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.coreos.etcd3.api.RangeRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.coreos.etcd3.api.RangeRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.coreos.etcd3.api.RangeRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.coreos.etcd3.api.RangeRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.coreos.etcd3.api.RangeRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code etcdserverpb.RangeRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:etcdserverpb.RangeRequest)
      com.coreos.etcd3.api.RangeRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.coreos.etcd3.api.Rpc.internal_static_etcdserverpb_RangeRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.coreos.etcd3.api.Rpc.internal_static_etcdserverpb_RangeRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.coreos.etcd3.api.RangeRequest.class, com.coreos.etcd3.api.RangeRequest.Builder.class);
    }

    // Construct using com.coreos.etcd3.api.RangeRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      key_ = com.google.protobuf.ByteString.EMPTY;

      rangeEnd_ = com.google.protobuf.ByteString.EMPTY;

      limit_ = 0L;

      revision_ = 0L;

      sortOrder_ = 0;

      sortTarget_ = 0;

      serializable_ = false;

      keysOnly_ = false;

      countOnly_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.coreos.etcd3.api.Rpc.internal_static_etcdserverpb_RangeRequest_descriptor;
    }

    public com.coreos.etcd3.api.RangeRequest getDefaultInstanceForType() {
      return com.coreos.etcd3.api.RangeRequest.getDefaultInstance();
    }

    public com.coreos.etcd3.api.RangeRequest build() {
      com.coreos.etcd3.api.RangeRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.coreos.etcd3.api.RangeRequest buildPartial() {
      com.coreos.etcd3.api.RangeRequest result = new com.coreos.etcd3.api.RangeRequest(this);
      result.key_ = key_;
      result.rangeEnd_ = rangeEnd_;
      result.limit_ = limit_;
      result.revision_ = revision_;
      result.sortOrder_ = sortOrder_;
      result.sortTarget_ = sortTarget_;
      result.serializable_ = serializable_;
      result.keysOnly_ = keysOnly_;
      result.countOnly_ = countOnly_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.coreos.etcd3.api.RangeRequest) {
        return mergeFrom((com.coreos.etcd3.api.RangeRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.coreos.etcd3.api.RangeRequest other) {
      if (other == com.coreos.etcd3.api.RangeRequest.getDefaultInstance()) return this;
      if (other.getKey() != com.google.protobuf.ByteString.EMPTY) {
        setKey(other.getKey());
      }
      if (other.getRangeEnd() != com.google.protobuf.ByteString.EMPTY) {
        setRangeEnd(other.getRangeEnd());
      }
      if (other.getLimit() != 0L) {
        setLimit(other.getLimit());
      }
      if (other.getRevision() != 0L) {
        setRevision(other.getRevision());
      }
      if (other.sortOrder_ != 0) {
        setSortOrderValue(other.getSortOrderValue());
      }
      if (other.sortTarget_ != 0) {
        setSortTargetValue(other.getSortTargetValue());
      }
      if (other.getSerializable() != false) {
        setSerializable(other.getSerializable());
      }
      if (other.getKeysOnly() != false) {
        setKeysOnly(other.getKeysOnly());
      }
      if (other.getCountOnly() != false) {
        setCountOnly(other.getCountOnly());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.coreos.etcd3.api.RangeRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.coreos.etcd3.api.RangeRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * key is the first key for the range. If range_end is not given, the request only looks up key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }
    /**
     * <pre>
     * key is the first key for the range. If range_end is not given, the request only looks up key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    public Builder setKey(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      key_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * key is the first key for the range. If range_end is not given, the request only looks up key.
     * </pre>
     *
     * <code>optional bytes key = 1;</code>
     */
    public Builder clearKey() {
      
      key_ = getDefaultInstance().getKey();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString rangeEnd_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * range_end is the upper bound on the requested range [key, range_end).
     * If range_end is '&#92;0', the range is all keys &gt;= key.
     * If the range_end is one bit larger than the given key,
     * then the range requests get the all keys with the prefix (the given key).
     * If both key and range_end are '&#92;0', then range requests returns all keys.
     * </pre>
     *
     * <code>optional bytes range_end = 2;</code>
     */
    public com.google.protobuf.ByteString getRangeEnd() {
      return rangeEnd_;
    }
    /**
     * <pre>
     * range_end is the upper bound on the requested range [key, range_end).
     * If range_end is '&#92;0', the range is all keys &gt;= key.
     * If the range_end is one bit larger than the given key,
     * then the range requests get the all keys with the prefix (the given key).
     * If both key and range_end are '&#92;0', then range requests returns all keys.
     * </pre>
     *
     * <code>optional bytes range_end = 2;</code>
     */
    public Builder setRangeEnd(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      rangeEnd_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * range_end is the upper bound on the requested range [key, range_end).
     * If range_end is '&#92;0', the range is all keys &gt;= key.
     * If the range_end is one bit larger than the given key,
     * then the range requests get the all keys with the prefix (the given key).
     * If both key and range_end are '&#92;0', then range requests returns all keys.
     * </pre>
     *
     * <code>optional bytes range_end = 2;</code>
     */
    public Builder clearRangeEnd() {
      
      rangeEnd_ = getDefaultInstance().getRangeEnd();
      onChanged();
      return this;
    }

    private long limit_ ;
    /**
     * <pre>
     * limit is a limit on the number of keys returned for the request.
     * </pre>
     *
     * <code>optional int64 limit = 3;</code>
     */
    public long getLimit() {
      return limit_;
    }
    /**
     * <pre>
     * limit is a limit on the number of keys returned for the request.
     * </pre>
     *
     * <code>optional int64 limit = 3;</code>
     */
    public Builder setLimit(long value) {
      
      limit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * limit is a limit on the number of keys returned for the request.
     * </pre>
     *
     * <code>optional int64 limit = 3;</code>
     */
    public Builder clearLimit() {
      
      limit_ = 0L;
      onChanged();
      return this;
    }

    private long revision_ ;
    /**
     * <pre>
     * revision is the point-in-time of the key-value store to use for the range.
     * If revision is less or equal to zero, the range is over the newest key-value store.
     * If the revision has been compacted, ErrCompacted is returned as a response.
     * </pre>
     *
     * <code>optional int64 revision = 4;</code>
     */
    public long getRevision() {
      return revision_;
    }
    /**
     * <pre>
     * revision is the point-in-time of the key-value store to use for the range.
     * If revision is less or equal to zero, the range is over the newest key-value store.
     * If the revision has been compacted, ErrCompacted is returned as a response.
     * </pre>
     *
     * <code>optional int64 revision = 4;</code>
     */
    public Builder setRevision(long value) {
      
      revision_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * revision is the point-in-time of the key-value store to use for the range.
     * If revision is less or equal to zero, the range is over the newest key-value store.
     * If the revision has been compacted, ErrCompacted is returned as a response.
     * </pre>
     *
     * <code>optional int64 revision = 4;</code>
     */
    public Builder clearRevision() {
      
      revision_ = 0L;
      onChanged();
      return this;
    }

    private int sortOrder_ = 0;
    /**
     * <pre>
     * sort_order is the order for returned sorted results.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;</code>
     */
    public int getSortOrderValue() {
      return sortOrder_;
    }
    /**
     * <pre>
     * sort_order is the order for returned sorted results.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;</code>
     */
    public Builder setSortOrderValue(int value) {
      sortOrder_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sort_order is the order for returned sorted results.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;</code>
     */
    public com.coreos.etcd3.api.RangeRequest.SortOrder getSortOrder() {
      com.coreos.etcd3.api.RangeRequest.SortOrder result = com.coreos.etcd3.api.RangeRequest.SortOrder.valueOf(sortOrder_);
      return result == null ? com.coreos.etcd3.api.RangeRequest.SortOrder.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * sort_order is the order for returned sorted results.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;</code>
     */
    public Builder setSortOrder(com.coreos.etcd3.api.RangeRequest.SortOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      sortOrder_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sort_order is the order for returned sorted results.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortOrder sort_order = 5;</code>
     */
    public Builder clearSortOrder() {
      
      sortOrder_ = 0;
      onChanged();
      return this;
    }

    private int sortTarget_ = 0;
    /**
     * <pre>
     * sort_target is the key-value field to use for sorting.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;</code>
     */
    public int getSortTargetValue() {
      return sortTarget_;
    }
    /**
     * <pre>
     * sort_target is the key-value field to use for sorting.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;</code>
     */
    public Builder setSortTargetValue(int value) {
      sortTarget_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sort_target is the key-value field to use for sorting.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;</code>
     */
    public com.coreos.etcd3.api.RangeRequest.SortTarget getSortTarget() {
      com.coreos.etcd3.api.RangeRequest.SortTarget result = com.coreos.etcd3.api.RangeRequest.SortTarget.valueOf(sortTarget_);
      return result == null ? com.coreos.etcd3.api.RangeRequest.SortTarget.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * sort_target is the key-value field to use for sorting.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;</code>
     */
    public Builder setSortTarget(com.coreos.etcd3.api.RangeRequest.SortTarget value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      sortTarget_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * sort_target is the key-value field to use for sorting.
     * </pre>
     *
     * <code>optional .etcdserverpb.RangeRequest.SortTarget sort_target = 6;</code>
     */
    public Builder clearSortTarget() {
      
      sortTarget_ = 0;
      onChanged();
      return this;
    }

    private boolean serializable_ ;
    /**
     * <pre>
     * serializable sets the range request to use serializable member-local reads.
     * Range requests are linearizable by default; linearizable requests have higher
     * latency and lower throughput than serializable requests but reflect the current
     * consensus of the cluster. For better performance, in exchange for possible stale reads,
     * a serializable range request is served locally without needing to reach consensus
     * with other nodes in the cluster.
     * </pre>
     *
     * <code>optional bool serializable = 7;</code>
     */
    public boolean getSerializable() {
      return serializable_;
    }
    /**
     * <pre>
     * serializable sets the range request to use serializable member-local reads.
     * Range requests are linearizable by default; linearizable requests have higher
     * latency and lower throughput than serializable requests but reflect the current
     * consensus of the cluster. For better performance, in exchange for possible stale reads,
     * a serializable range request is served locally without needing to reach consensus
     * with other nodes in the cluster.
     * </pre>
     *
     * <code>optional bool serializable = 7;</code>
     */
    public Builder setSerializable(boolean value) {
      
      serializable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * serializable sets the range request to use serializable member-local reads.
     * Range requests are linearizable by default; linearizable requests have higher
     * latency and lower throughput than serializable requests but reflect the current
     * consensus of the cluster. For better performance, in exchange for possible stale reads,
     * a serializable range request is served locally without needing to reach consensus
     * with other nodes in the cluster.
     * </pre>
     *
     * <code>optional bool serializable = 7;</code>
     */
    public Builder clearSerializable() {
      
      serializable_ = false;
      onChanged();
      return this;
    }

    private boolean keysOnly_ ;
    /**
     * <pre>
     * keys_only when set returns only the keys and not the values.
     * </pre>
     *
     * <code>optional bool keys_only = 8;</code>
     */
    public boolean getKeysOnly() {
      return keysOnly_;
    }
    /**
     * <pre>
     * keys_only when set returns only the keys and not the values.
     * </pre>
     *
     * <code>optional bool keys_only = 8;</code>
     */
    public Builder setKeysOnly(boolean value) {
      
      keysOnly_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * keys_only when set returns only the keys and not the values.
     * </pre>
     *
     * <code>optional bool keys_only = 8;</code>
     */
    public Builder clearKeysOnly() {
      
      keysOnly_ = false;
      onChanged();
      return this;
    }

    private boolean countOnly_ ;
    /**
     * <pre>
     * count_only when set returns only the count of the keys in the range.
     * </pre>
     *
     * <code>optional bool count_only = 9;</code>
     */
    public boolean getCountOnly() {
      return countOnly_;
    }
    /**
     * <pre>
     * count_only when set returns only the count of the keys in the range.
     * </pre>
     *
     * <code>optional bool count_only = 9;</code>
     */
    public Builder setCountOnly(boolean value) {
      
      countOnly_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * count_only when set returns only the count of the keys in the range.
     * </pre>
     *
     * <code>optional bool count_only = 9;</code>
     */
    public Builder clearCountOnly() {
      
      countOnly_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:etcdserverpb.RangeRequest)
  }

  // @@protoc_insertion_point(class_scope:etcdserverpb.RangeRequest)
  private static final com.coreos.etcd3.api.RangeRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.coreos.etcd3.api.RangeRequest();
  }

  public static com.coreos.etcd3.api.RangeRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RangeRequest>
      PARSER = new com.google.protobuf.AbstractParser<RangeRequest>() {
    public RangeRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RangeRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RangeRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RangeRequest> getParserForType() {
    return PARSER;
  }

  public com.coreos.etcd3.api.RangeRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

