// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package com.coreos.etcd3.api;

public interface DeleteRangeResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:etcdserverpb.DeleteRangeResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .etcdserverpb.ResponseHeader header = 1;</code>
   */
  boolean hasHeader();
  /**
   * <code>optional .etcdserverpb.ResponseHeader header = 1;</code>
   */
  com.coreos.etcd3.api.ResponseHeader getHeader();
  /**
   * <code>optional .etcdserverpb.ResponseHeader header = 1;</code>
   */
  com.coreos.etcd3.api.ResponseHeaderOrBuilder getHeaderOrBuilder();

  /**
   * <pre>
   * deleted is the number of keys deleted by the delete range request.
   * </pre>
   *
   * <code>optional int64 deleted = 2;</code>
   */
  long getDeleted();

  /**
   * <pre>
   * if prev_kv is set in the request, the previous key-value pairs will be returned.
   * </pre>
   *
   * <code>repeated .mvccpb.KeyValue prev_kvs = 3;</code>
   */
  java.util.List<mvccpb.Kv.KeyValue> 
      getPrevKvsList();
  /**
   * <pre>
   * if prev_kv is set in the request, the previous key-value pairs will be returned.
   * </pre>
   *
   * <code>repeated .mvccpb.KeyValue prev_kvs = 3;</code>
   */
  mvccpb.Kv.KeyValue getPrevKvs(int index);
  /**
   * <pre>
   * if prev_kv is set in the request, the previous key-value pairs will be returned.
   * </pre>
   *
   * <code>repeated .mvccpb.KeyValue prev_kvs = 3;</code>
   */
  int getPrevKvsCount();
  /**
   * <pre>
   * if prev_kv is set in the request, the previous key-value pairs will be returned.
   * </pre>
   *
   * <code>repeated .mvccpb.KeyValue prev_kvs = 3;</code>
   */
  java.util.List<? extends mvccpb.Kv.KeyValueOrBuilder> 
      getPrevKvsOrBuilderList();
  /**
   * <pre>
   * if prev_kv is set in the request, the previous key-value pairs will be returned.
   * </pre>
   *
   * <code>repeated .mvccpb.KeyValue prev_kvs = 3;</code>
   */
  mvccpb.Kv.KeyValueOrBuilder getPrevKvsOrBuilder(
      int index);
}
